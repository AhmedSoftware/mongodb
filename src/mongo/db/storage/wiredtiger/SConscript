# -*- mode: python -*-
Import("env")
Import("wiredtiger")
Import("get_option")

env = env.Clone()

using_ubsan = False
sanitizer_list = get_option('sanitize')
if sanitizer_list:
    using_ubsan = 'undefined' in sanitizer_list.split(',')

env.Library(
    target='storage_wiredtiger_customization_hooks',
    source= [
        'wiredtiger_customization_hooks.cpp',
        'wiredtiger_extensions.cpp',
    ],
    LIBDEPS= ['$BUILD_DIR/merizo/base',
              '$BUILD_DIR/merizo/db/service_context'],
    PROGDEPS_DEPENDENTS=[
        '$BUILD_DIR/merizo/merizod',
        '$BUILD_DIR/merizo/merizos',
    ],
)

if wiredtiger:
    wtEnv = env.Clone()
    wtEnv.InjectThirdParty(libraries=['wiredtiger'])
    wtEnv.InjectThirdParty(libraries=['zlib'])
    wtEnv.InjectThirdParty(libraries=['valgrind'])

    # This is the smallest possible set of files that wraps WT
    wtEnv.Library(
        target='storage_wiredtiger_core',
        source= [
            'wiredtiger_begin_transaction_block.cpp',
            'wiredtiger_cursor.cpp',
            'wiredtiger_global_options.cpp',
            'wiredtiger_index.cpp',
            'wiredtiger_kv_engine.cpp',
            'wiredtiger_oplog_manager.cpp',
            'wiredtiger_parameters.cpp',
            'wiredtiger_prepare_conflict.cpp',
            'wiredtiger_record_store.cpp',
            'wiredtiger_recovery_unit.cpp',
            'wiredtiger_session_cache.cpp',
            'wiredtiger_snapshot_manager.cpp',
            'wiredtiger_size_storer.cpp',
            'wiredtiger_util.cpp',
            env.Idlc('wiredtiger_parameters.idl')[0],
            ],
        LIBDEPS= [
            '$BUILD_DIR/merizo/base',
            '$BUILD_DIR/merizo/db/bson/dotted_path_support',
            '$BUILD_DIR/merizo/db/commands/test_commands_enabled',
            '$BUILD_DIR/merizo/db/catalog/collection',
            '$BUILD_DIR/merizo/db/catalog/collection_options',
            '$BUILD_DIR/merizo/db/concurrency/lock_manager',
            '$BUILD_DIR/merizo/db/concurrency/write_conflict_exception',
            '$BUILD_DIR/merizo/db/curop',
            '$BUILD_DIR/merizo/db/index/index_descriptor',
            '$BUILD_DIR/merizo/db/global_settings',
            '$BUILD_DIR/merizo/db/namespace_string',
            '$BUILD_DIR/merizo/db/repl/repl_coordinator_interface',
            '$BUILD_DIR/merizo/db/repl/repl_settings',
            '$BUILD_DIR/merizo/db/server_options_core',
            '$BUILD_DIR/merizo/db/service_context',
            '$BUILD_DIR/merizo/db/storage/index_entry_comparison',
            '$BUILD_DIR/merizo/db/storage/journal_listener',
            '$BUILD_DIR/merizo/db/storage/key_string',
            '$BUILD_DIR/merizo/db/storage/kv/kv_prefix',
            '$BUILD_DIR/merizo/db/storage/oplog_hack',
            '$BUILD_DIR/merizo/db/storage/storage_file_util',
            '$BUILD_DIR/merizo/db/storage/storage_options',
            '$BUILD_DIR/merizo/util/concurrency/ticketholder',
            '$BUILD_DIR/merizo/util/elapsed_tracker',
            '$BUILD_DIR/merizo/util/processinfo',
            '$BUILD_DIR/third_party/shim_snappy',
            '$BUILD_DIR/third_party/shim_wiredtiger',
            '$BUILD_DIR/third_party/shim_zlib',
            'storage_wiredtiger_customization_hooks',
            ],
        LIBDEPS_PRIVATE= [
            '$BUILD_DIR/merizo/db/snapshot_window_options',
            '$BUILD_DIR/merizo/db/storage/storage_repair_observer',
            '$BUILD_DIR/merizo/util/options_parser/options_parser',
            ],
        )

    wtEnv.Library(
        target='storage_wiredtiger',
        source=[
            'wiredtiger_init.cpp',
            'wiredtiger_options_init.cpp',
            'wiredtiger_record_store_merizod.cpp',
            'wiredtiger_server_status.cpp',
            env.Idlc('wiredtiger_global_options.idl')[0],
        ],
        LIBDEPS=[
            'storage_wiredtiger_core',
            'storage_wiredtiger_customization_hooks',
            '$BUILD_DIR/merizo/db/db_raii',
            '$BUILD_DIR/merizo/db/storage/kv/kv_engine',
            '$BUILD_DIR/merizo/db/storage/storage_engine_lock_file',
            '$BUILD_DIR/merizo/db/storage/storage_engine_metadata',
        ],
        LIBDEPS_PRIVATE=[
            '$BUILD_DIR/merizo/db/commands/server_status',
            '$BUILD_DIR/merizo/db/concurrency/lock_manager',
            '$BUILD_DIR/merizo/db/storage/storage_engine_common',
            '$BUILD_DIR/merizo/util/options_parser/options_parser',
        ],
    )

    wtEnv.Library(
        target='storage_wiredtiger_mock',
        source=[
            'wiredtiger_record_store_mock.cpp',
            ],
        LIBDEPS=['storage_wiredtiger_core',
             ]
        )

    wtEnv.CppUnitTest(
        target='storage_wiredtiger_init_test',
        source=['wiredtiger_init_test.cpp',
                ],
        LIBDEPS=[
            '$BUILD_DIR/merizo/db/auth/authmocks',
            '$BUILD_DIR/merizo/db/service_context',
            '$BUILD_DIR/merizo/db/service_context_d',
            '$BUILD_DIR/merizo/db/service_context_test_fixture',
            '$BUILD_DIR/merizo/db/storage/storage_engine_metadata',
            '$BUILD_DIR/merizo/db/storage/storage_options',
            '$BUILD_DIR/merizo/db/storage/wiredtiger/storage_wiredtiger',
            '$BUILD_DIR/merizo/db/storage/wiredtiger/storage_wiredtiger_core',
            ],
        )

    wtEnv.CppUnitTest(
        target='storage_wiredtiger_recovery_unit_test',
        source=[
            'wiredtiger_recovery_unit_test.cpp',
        ],
        LIBDEPS=[
            'storage_wiredtiger_mock',
            '$BUILD_DIR/merizo/db/storage/recovery_unit_test_harness',
            '$BUILD_DIR/merizo/util/clock_source_mock',
        ],
        LIBDEPS_PRIVATE=[
            '$BUILD_DIR/merizo/db/auth/authmocks',
            '$BUILD_DIR/merizo/db/index/index_access_methods',
            '$BUILD_DIR/merizo/db/repl/repl_coordinator_interface',
            '$BUILD_DIR/merizo/db/repl/replmocks',
        ],
    )

    wtEnv.Library(
        target='additional_wiredtiger_record_store_tests',
        source=[
            'wiredtiger_record_store_test.cpp',
        ],
        LIBDEPS=[
            '$BUILD_DIR/merizo/db/storage/kv/kv_engine_core',
            '$BUILD_DIR/merizo/db/storage/record_store_test_harness',
            '$BUILD_DIR/merizo/util/clock_source_mock',
            'storage_wiredtiger_mock',
        ],
    )

    wtEnv.Library(
        target='additional_wiredtiger_index_tests',
        source=[
            'wiredtiger_index_test.cpp',
        ],
        LIBDEPS=[
            '$BUILD_DIR/merizo/db/storage/kv/kv_engine_core',
            '$BUILD_DIR/merizo/db/storage/sorted_data_interface_test_harness',
            'storage_wiredtiger_mock',
        ],
    )

    # All of these tests fail to compile under undefined behavior
    # sanitizer due to unexpressed circular dependency edges. In particular
    # they all need a definition from the 'catalog'.
    if not using_ubsan:
        wtEnv.CppUnitTest(
            target='storage_wiredtiger_record_store_test',
            source=[
                'wiredtiger_standard_record_store_test.cpp',
            ],
            LIBDEPS=[
                'additional_wiredtiger_record_store_tests',
            ],
            LIBDEPS_PRIVATE=[
                '$BUILD_DIR/merizo/db/auth/authmocks',
                '$BUILD_DIR/merizo/db/repl/repl_coordinator_interface',
                '$BUILD_DIR/merizo/db/repl/replmocks',
            ],
        )

        wtEnv.CppUnitTest(
            target='storage_wiredtiger_prefixed_record_store_test',
            source=[
                'wiredtiger_prefixed_record_store_test.cpp',
            ],
            LIBDEPS=[
                'additional_wiredtiger_record_store_tests',
            ],
            LIBDEPS_PRIVATE=[
                '$BUILD_DIR/merizo/db/auth/authmocks',
                '$BUILD_DIR/merizo/db/repl/repl_coordinator_interface',
                '$BUILD_DIR/merizo/db/repl/replmocks',
            ],
        )

        wtEnv.CppUnitTest(
            target='storage_wiredtiger_index_test',
            source=[
                'wiredtiger_standard_index_test.cpp',
            ],
            LIBDEPS=[
                'additional_wiredtiger_index_tests',
            ],
            LIBDEPS_PRIVATE=[
                '$BUILD_DIR/merizo/db/auth/authmocks',
            ]
        )

        wtEnv.CppUnitTest(
            target='storage_wiredtiger_prefixed_index_test',
            source=[
                'wiredtiger_prefixed_index_test.cpp',
            ],
            LIBDEPS=[
                'additional_wiredtiger_index_tests',
            ],
            LIBDEPS_PRIVATE=[
                '$BUILD_DIR/merizo/db/auth/authmocks',
            ]
        )

        wtEnv.CppUnitTest(
            target='storage_wiredtiger_kv_engine_test',
            source=[
                'wiredtiger_kv_engine_test.cpp',
            ],
            LIBDEPS=[
                '$BUILD_DIR/merizo/db/auth/authmocks',
                '$BUILD_DIR/merizo/db/storage/kv/kv_engine_test_harness',
                'storage_wiredtiger_mock',
            ],
            LIBDEPS_PRIVATE=[
                '$BUILD_DIR/merizo/db/repl/repl_coordinator_interface',
                '$BUILD_DIR/merizo/db/repl/replmocks',
                '$BUILD_DIR/merizo/db/service_context_test_fixture',
            ],
        )

        wtEnv.CppUnitTest(
            target='storage_wiredtiger_util_test',
            source=['wiredtiger_util_test.cpp',
                    ],
            LIBDEPS=[
                '$BUILD_DIR/merizo/db/service_context',
                '$BUILD_DIR/merizo/db/storage/kv/kv_engine_core',
                'storage_wiredtiger_mock',
                ],
            )

        wtEnv.CppUnitTest(
            target='storage_wiredtiger_session_cache_test',
            source=['wiredtiger_session_cache_test.cpp',
                    ],
            LIBDEPS=[
                'storage_wiredtiger_mock',
                ],
            )
