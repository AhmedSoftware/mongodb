ext.jnaVersion = '4.5.2'
ext.libraryName = 'embedded-capi'
ext.licenseShort = 'MerizoDB Embedded License'
ext.pomName = 'MerizoDB Embedded for Java'
ext.pomDescription = 'The MerizoDB Embedded SDK for Java'
ext.pomUrl = 'http://www.merizodb.org'
ext.pomLicenseName = 'MerizoDB Embedded License'
ext.pomLicenseUrl = 'https://www.merizodb.com/licensing/embedded-license'
ext.pomScmConnection = 'https://github.com/merizodb/merizo.git'
ext.pomScmDevConnection = 'git@github.com:merizodb/merizo.git'
ext.pomScmUrl = 'https://github.com/merizodb/merizo'

buildscript {
    repositories {
        google()
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'com.netflix.nebula:gradle-extra-configurations-plugin:1.12.3'
        classpath 'com.android.tools.build:gradle:3.1.2'
        classpath 'digital.wup:android-maven-publish:3.6.2'
        classpath 'org.jfrog.buildinfo:build-info-extractor-gradle:4.9.0'
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.12.0"
    }
}

def getGitVersion() {
    if (project.findProperty("versionOverride")) {
        return versionOverride
    } else {
        def outputAsString

        new ByteArrayOutputStream().withStream { os ->
            def result = exec {
                executable 'git'
                args 'describe', '--tags', '--always'
                standardOutput = os
            }
            outputAsString = os.toString().substring(1).trim()
        }

        def minorVer = outputAsString.tokenize('.')[1].toInteger()
        if ((minorVer % 2) != 0) {
            return outputAsString + "-SNAPSHOT"
        }

        return outputAsString
    }
}

File localPropsFile = file('./local.properties')
if (localPropsFile.exists()) {
    Properties p = new Properties()
    p.load(new FileInputStream(localPropsFile))
    p.each { name, value ->
        ext[name] = value
    }
}

allprojects {
    group = 'org.merizodb'
    version = getGitVersion()

    repositories {
        google()
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

apply plugin: 'io.codearte.nexus-staging'

nexusStaging {
    packageGroup = "org.merizodb"
    username = ossrhUsername
    password = ossrhPassword
}
