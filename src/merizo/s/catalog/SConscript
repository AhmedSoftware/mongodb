# -*- mode: python -*-

Import("env")

env = env.Clone()

env.Library(
    target='sharding_catalog_client',
    source=[
        'sharding_catalog_client.cpp',
    ],
    LIBDEPS=[
        '$BUILD_DIR/merizo/db/write_concern_options',
        '$BUILD_DIR/merizo/db/keys_collection_document',
    ],
)

env.Library(
    target='dist_lock_manager',
    source=[
        'dist_lock_manager.cpp',
        'dist_lock_ping_info.cpp',
    ],
    LIBDEPS=[
        '$BUILD_DIR/merizo/base',
    ],
)

env.Library(
    target='dist_lock_catalog_interface',
    source=[
        'dist_lock_catalog.cpp',
    ],
    LIBDEPS=[
        '$BUILD_DIR/merizo/db/write_concern_options',
    ],
)

env.Library(
    target='replset_dist_lock_manager',
    source=[
        'replset_dist_lock_manager.cpp',
    ],
    LIBDEPS=[
        '$BUILD_DIR/merizo/db/service_context',
        '$BUILD_DIR/merizo/s/catalog/dist_lock_catalog_interface',
        '$BUILD_DIR/merizo/s/catalog/dist_lock_manager',
        '$BUILD_DIR/merizo/s/client/sharding_client',
        '$BUILD_DIR/merizo/util/fail_point'
    ],
)

env.Library(
    target='dist_lock_catalog_impl',
    source=[
        'dist_lock_catalog_impl.cpp',
    ],
    LIBDEPS=[
        '$BUILD_DIR/merizo/base',
        '$BUILD_DIR/merizo/client/read_preference',
        '$BUILD_DIR/merizo/client/remote_command_targeter',
        '$BUILD_DIR/merizo/db/common',
        '$BUILD_DIR/merizo/db/query/command_request_response',
        '$BUILD_DIR/merizo/db/repl/read_concern_args',
        '$BUILD_DIR/merizo/rpc/command_status',
        '$BUILD_DIR/merizo/s/catalog/dist_lock_catalog_interface',
        '$BUILD_DIR/merizo/s/client/sharding_client',
        '$BUILD_DIR/merizo/s/write_ops/batch_write_types',
        '$BUILD_DIR/merizo/util/net/network',
    ],
)

env.Library(
    target='sharding_catalog_client_impl',
    source=[
        'sharding_catalog_client_impl.cpp',
    ],
    LIBDEPS=[
        '$BUILD_DIR/merizo/db/repl/read_concern_args',
        '$BUILD_DIR/merizo/db/storage/duplicate_key_error_info',
        '$BUILD_DIR/merizo/executor/network_interface',
        '$BUILD_DIR/merizo/s/client/sharding_client',
        '$BUILD_DIR/merizo/s/coreshard',
        'dist_lock_manager',
        'sharding_catalog_client',
    ],
)

env.Library(
    target='dist_lock_manager_mock',
    source=[
        'dist_lock_manager_mock.cpp',
    ],
    LIBDEPS=[
        '$BUILD_DIR/merizo/unittest/unittest',
        'dist_lock_manager',
    ],
)

env.Library(
    target='dist_lock_catalog_mock',
    source=[
        'dist_lock_catalog_mock.cpp',
    ],
    LIBDEPS=[
        '$BUILD_DIR/merizo/s/common_s',
        '$BUILD_DIR/merizo/unittest/unittest',
        'dist_lock_catalog_interface',
    ]
)

env.Library(
    target='sharding_catalog_client_mock',
    source=[
        'sharding_catalog_client_mock.cpp',
    ],
    LIBDEPS=[
        'dist_lock_manager_mock',
        'sharding_catalog_client',
    ]
)

env.CppUnitTest(
    target='replset_dist_lock_manager_test',
    source=[
        'dist_lock_catalog_impl_test.cpp',
        'replset_dist_lock_manager_test.cpp',
    ],
    LIBDEPS=[
        '$BUILD_DIR/merizo/db/auth/authmocks',
        '$BUILD_DIR/merizo/db/storage/duplicate_key_error_info',
        '$BUILD_DIR/merizo/s/catalog/dist_lock_catalog_mock',
        '$BUILD_DIR/merizo/s/catalog/sharding_catalog_client_mock',
        '$BUILD_DIR/merizo/s/shard_server_test_fixture',
        'dist_lock_catalog_impl',
        'replset_dist_lock_manager',
    ]
)

env.CppUnitTest(
    target='sharding_catalog_client_test',
    source=[
        'sharding_catalog_test.cpp',
        'sharding_catalog_write_retry_test.cpp',
    ],
    LIBDEPS=[
        '$BUILD_DIR/merizo/db/storage/duplicate_key_error_info',
        '$BUILD_DIR/merizo/s/sharding_router_test_fixture',
    ]
)
