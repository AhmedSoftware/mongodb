# -*- mode: python; -*-

Import('env')
Import('get_option')

env = env.Clone()

yamlEnv = env.Clone()
yamlEnv.InjectThirdParty(libraries=['yaml'])

merizobridge = env.Program(
    target="merizobridge",
    source=[
        "bridge.cpp",
        "bridge_commands.cpp",
        "merizobridge_options.cpp",
        env.Idlc("merizobridge_options.idl")[0],
        "merizobridge_options_init.cpp"
    ],
    LIBDEPS=[
        '$BUILD_DIR/merizo/db/dbmessage',
        '$BUILD_DIR/merizo/rpc/rpc',
        '$BUILD_DIR/merizo/transport/message_compressor',
        '$BUILD_DIR/merizo/transport/message_compressor_options_server',
        '$BUILD_DIR/merizo/transport/service_entry_point',
        '$BUILD_DIR/merizo/transport/service_executor',
        '$BUILD_DIR/merizo/transport/transport_layer',
        '$BUILD_DIR/merizo/util/net/network',
        '$BUILD_DIR/merizo/util/options_parser/options_parser_init',
        '$BUILD_DIR/merizo/util/signal_handlers',
    ],
    INSTALL_ALIAS=[
        'tools'
    ],
)

merizoebench = yamlEnv.Program(
    target='merizoebench',
    source=[
        'merizoebench_main.cpp',
        'merizoebench_options.cpp',
        'merizoebench_options_init.cpp',
        env.Idlc('merizoebench_options.idl')[0],
    ],
    LIBDEPS=[
        '$BUILD_DIR/merizo/db/dbdirectclient',
        '$BUILD_DIR/merizo/db/storage/storage_options',
        '$BUILD_DIR/merizo/db/storage/wiredtiger/storage_wiredtiger',
        '$BUILD_DIR/merizo/embedded/embedded',
        '$BUILD_DIR/merizo/embedded/embedded_integration_helpers',
        '$BUILD_DIR/merizo/shell/benchrun',
        '$BUILD_DIR/merizo/util/signal_handlers',
    ],
    INSTALL_ALIAS=[
        'embedded-test',
        'tools',
    ],
)

hygienic = get_option('install-mode') == 'hygienic'
if not hygienic:
    env.Install("#/", merizobridge)
    env.Install("#/", merizoebench)

env.Alias('all', merizoebench)  # This ensures it compiles and links, but doesn't copy it anywhere.
